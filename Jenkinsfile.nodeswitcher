pipeline {
  agent {
    label 'jenkins-agent1'
  }

  environment {
    APP_NAME = 'backend-app-tutor'
    APP_PORT = 3000
    RUN_WITH_NGINX = "/bin/bash nginx_script.sh"
    GRANT_PERMISSION = "chmod 777 -R ."
    SHOW_STATE = 'whoami; ls -la; pwd'
    SHOW_HOST_RUNNING = "echo \"Application are running on 0.0.0.0:${APP_PORT}\""
    SHOW_NODE_NPM_VERSION = 'node -v; npm -v'
    SHOW_PM2_STATUS = 'pm2 status'
    SAVE_PM2_LOGS = "pm2 logs ${APP_NAME} > nohup.out 2>&1 &"
    SHOW_PM2_LOGS = 'cat nohup.out'
  }

  stages {
    stage('Deploy with nodejs switch in nginx') {
      steps {
        script {
          try {
            timeout(time: 5, unit: 'MINUTES') {
              env.useChoice = input message: "Choose node version 16 or 18",
                  parameters: [choice(name: 'Deploy', choices: '16\n18\ncancel', description: 'Choose one')]
            }
            echo "Deploying ${APP_NAME} on port ${APP_PORT}"
            if(env.useChoice == '16') {
              nodejs(nodeJSInstallationName: 'node16') {
                echo "Deploying ${APP_NAME} on port ${APP_PORT}"
                sh(script: """${SHOW_NODE_NPM_VERSION}""", label: 'show node version')
                sh(script: """${GRANT_PERMISSION}""", label: 'grant permission')
                sh(script: """ ${SHOW_STATE} """, label: 'show state')
                sh(script: """ ${RUN_WITH_NGINX}  """, label: 'run with systemd')
                sh(script: """  ${SHOW_HOST_RUNNING} """, label: 'show log')
                sh(script: """ ${SHOW_PM2_STATUS} """, label: 'show pm2 status')
                sh(script: """ ${SAVE_PM2_LOGS} """, label: 'save pm2 logs')
                sh(script: """ ${SHOW_PM2_LOGS} """, label: 'show pm2 logs')
              }
            }
            else if(env.useChoice == '18') {
              nodejs(nodeJSInstallationName: 'node18') {
                echo "Deploying ${APP_NAME} on port ${APP_PORT}"
                sh(script: """${SHOW_NODE_NPM_VERSION}""", label: 'show node version')
                sh(script: """${GRANT_PERMISSION}""", label: 'grant permission')
                sh(script: """ ${SHOW_STATE} """, label: 'show state')
                sh(script: """ ${RUN_WITH_NGINX}  """, label: 'run with systemd')
                sh(script: """  ${SHOW_HOST_RUNNING} """, label: 'show log')
                sh(script: """ ${SHOW_PM2_STATUS} """, label: 'show pm2 status')
                sh(script: """ ${SAVE_PM2_LOGS} """, label: 'save pm2 logs')
                sh(script: """ ${SHOW_PM2_LOGS} """, label: 'show pm2 logs')
              }
            }
            else {
              echo 'Cancel'
            }
          } catch (Exception e) {
            echo 'Error: ${e}'
          }
        }
      }
    }
  }
}
